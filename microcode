// code for arduino micro that support native USB communication

#include <Arduino.h>
#include <Keyboard.h>
#include <SoftwareSerial.h>

const byte rxPin = 9, txPin = 10;
SoftwareSerial mySerial(rxPin, txPin);

const int buttonPins[] = {2, 3, 4, 5, 6};
const int numButtons = sizeof(buttonPins) / sizeof(buttonPins[0]);
bool buttonStates[numButtons] = {true, true, true, true, true};
int buzzer = 7;

int delay_time = 300, tone_duration = 50, freq = 3000;

void setup() {
  mySerial.begin(9600);
  for (int i = 0; i < numButtons; i++) {
    pinMode(buttonPins[i], INPUT_PULLUP);
  }
  pinMode(buzzer, OUTPUT);
  digitalWrite(buzzer, LOW);
  Keyboard.begin();
}

void sendKeyAndTone(int key) {
  Keyboard.write(key);
  tone(buzzer, freq, tone_duration);
  delay(delay_time);
}

void loop() {
  if (mySerial.available() > 0) {
    int received = mySerial.read();
    if (received >= 0 && received <= 6) {
      sendKeyAndTone(KEY_F13 + received);
    } else if (received >= 7 && received <= 13) {
      Keyboard.press(KEY_LEFT_CTRL);
      sendKeyAndTone(KEY_F13 + (received - 7));
      Keyboard.release(KEY_LEFT_CTRL);
    }
  }

  for (int i = 0; i < numButtons; i++) {
    if (!digitalRead(buttonPins[i]) && buttonStates[i]) {
      buttonStates[i] = false;
      sendKeyAndTone(KEY_F20 + i);
    } else if (digitalRead(buttonPins[i]) && !buttonStates[i]) {
      buttonStates[i] = true;
    }
  }
}
